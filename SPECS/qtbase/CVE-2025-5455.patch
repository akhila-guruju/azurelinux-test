From 7cf5db1c5976767981aadfd1212efcf7842039f5 Mon Sep 17 00:00:00 2001
From: akhila-guruju <v-guakhila@microsoft.com>
Date: Mon, 30 Jun 2025 07:59:40 +0000
Subject: [PATCH] Address CVE-2025-5455

Upstream Patch Reference:
 1. https://codereview.qt-project.org/c/qt/qtbase/+/642006/7/src/corelib/io/qdataurl.cpp
 2. for test: https://codereview.qt-project.org/c/qt/qtbase/+/642006/7/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp

---
 src/corelib/io/qdataurl.cpp                     | 16 +++++++++-------
 src/corelib/text/qbytearrayview.h               |  6 ++++++
 tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp |  2 ++
 3 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/src/corelib/io/qdataurl.cpp b/src/corelib/io/qdataurl.cpp
index 92c6f541..225bc115 100644
--- a/src/corelib/io/qdataurl.cpp
+++ b/src/corelib/io/qdataurl.cpp
@@ -41,16 +41,18 @@ Q_CORE_EXPORT bool qDecodeDataUrl(const QUrl &uri, QString &mimeType, QByteArray
             data.chop(7);
         }
 
-        if (QLatin1StringView{data}.startsWith("charset"_L1, Qt::CaseInsensitive)) {
-            qsizetype i = 7;      // strlen("charset")
-            while (data.at(i) == ' ')
-                ++i;
-            if (data.at(i) == '=')
-                data.prepend("text/plain;");
+        QLatin1StringView textPlain;
+        constexpr auto charset = "charset"_L1;
+        if (QLatin1StringView{data}.startsWith(charset, Qt::CaseInsensitive)) {
+            QByteArrayView copy = data.sliced(charset.size());
+            while (copy.startsWith(' '))
+                copy.slice(1);
+            if (copy.startsWith('='))
+                textPlain = "text/plain;"_L1;
         }
 
         if (!data.isEmpty())
-            mimeType = QString::fromLatin1(data.trimmed());
+            mimeType = textPlain + QLatin1StringView(data.trimmed());
 
     }
 
diff --git a/src/corelib/text/qbytearrayview.h b/src/corelib/text/qbytearrayview.h
index f822a2ca..1fd0d0c3 100644
--- a/src/corelib/text/qbytearrayview.h
+++ b/src/corelib/text/qbytearrayview.h
@@ -195,6 +195,12 @@ public:
     { Q_ASSERT(pos >= 0); Q_ASSERT(pos <= size()); return QByteArrayView(data() + pos, size() - pos); }
     [[nodiscard]] constexpr QByteArrayView sliced(qsizetype pos, qsizetype n) const
     { Q_ASSERT(pos >= 0); Q_ASSERT(n >= 0); Q_ASSERT(size_t(pos) + size_t(n) <= size_t(size())); return QByteArrayView(data() + pos, n); }
+
+     constexpr QByteArrayView &slice(qsizetype pos)
+    { *this = sliced(pos); return *this; }
+     constexpr QByteArrayView &slice(qsizetype pos, qsizetype n)
+    { *this = sliced(pos, n); return *this; }
+
     [[nodiscard]] constexpr QByteArrayView chopped(qsizetype len) const
     { Q_ASSERT(len >= 0); Q_ASSERT(len <= size()); return first(size() - len); }
 
diff --git a/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp b/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp
index 8cc1b0ae..c1db6d59 100644
--- a/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp
+++ b/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp
@@ -34,6 +34,8 @@ void tst_QDataUrl::decode_data()
         "text/plain"_L1, QByteArray::fromPercentEncoding("%E2%88%9A"));
     row("everythingIsCaseInsensitive", "Data:texT/PlaiN;charSet=iSo-8859-1;Base64,SGVsbG8=", true,
         "texT/PlaiN;charSet=iSo-8859-1"_L1, QByteArrayLiteral("Hello"));
+    row("prematureCharsetEnd", "data:charset,", true,
+        "charset", ""); // nonsense result, but don't crash
 }
 
 void tst_QDataUrl::decode()
-- 
2.45.2

